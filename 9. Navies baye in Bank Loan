import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import accuracy_score
from sklearn.preprocessing import LabelEncoder
data = {
    'income': [2000, 4000, 6000, 8000, 10000],
    'credit_score': [600, 700, 750, 800, 850],
    'loan_approved': ['no', 'no', 'yes', 'yes', 'yes']
}
df = pd.DataFrame(data)
le = LabelEncoder()
df['loan_approved'] = le.fit_transform(df['loan_approved'])
X = df.drop('loan_approved', axis=1)
y = df['loan_approved']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=44)
model = GaussianNB()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
print(f"Accuracy of Naive Bayes classifier for bank loan prediction: {accuracy}")
